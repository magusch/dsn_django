# Generated by Django 3.1.7 on 2023-03-09 16:52

import datetime
from django.db import migrations, models
import django.utils.timezone
from django.utils.timezone import utc
import events.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Events2Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_id', models.CharField(default='event42_2023-03-09', max_length=30)),
                ('queue', models.IntegerField(default=events.models.last_queue)),
                ('title', models.CharField(max_length=500)),
                ('post', models.TextField(blank=True, default='* марта*  фестиваль *«ааааа»*\n\n\n\n*Где:*\n*Когда:*\n*Вход:*')),
                ('image', models.CharField(blank=True, max_length=500, null=True)),
                ('url', models.CharField(blank=True, max_length=500)),
                ('status', models.CharField(choices=[('ReadyToPost', 'Ready To Post'), ('Posted', 'Posted'), ('ForFuture', 'For Future'), ('Spam', 'Spam'), ('Scrape', 'Scrape It')], default='ReadyToPost', max_length=15)),
                ('price', models.CharField(blank=True, max_length=150)),
                ('address', models.CharField(blank=True, max_length=500)),
                ('explored_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='published date and time')),
                ('post_date', models.DateTimeField(blank=True, null=True, verbose_name='datetime for posting')),
                ('from_date', models.DateTimeField(default=datetime.datetime(2023, 3, 12, 16, 52, 1, 211317, tzinfo=utc), verbose_name='event from_date')),
                ('to_date', models.DateTimeField(default=datetime.datetime(2023, 3, 12, 16, 52, 1, 211317, tzinfo=utc), verbose_name='event to_date')),
            ],
        ),
        migrations.CreateModel(
            name='EventsNotApprovedNew',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_id', models.CharField(max_length=30)),
                ('approved', models.BooleanField(blank=True, default=False)),
                ('title', models.CharField(max_length=500)),
                ('post', models.TextField(blank=True, default='')),
                ('image', models.CharField(blank=True, max_length=500, null=True)),
                ('url', models.CharField(blank=True, max_length=500)),
                ('price', models.CharField(blank=True, max_length=500)),
                ('address', models.CharField(blank=True, max_length=500)),
                ('explored_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='published date and time')),
                ('from_date', models.DateTimeField(default=datetime.datetime(2023, 3, 11, 16, 52, 1, 3385, tzinfo=utc), verbose_name='event date_from')),
                ('to_date', models.DateTimeField(blank=True, default=datetime.datetime(2023, 3, 11, 16, 52, 1, 3410, tzinfo=utc), verbose_name='event to_date')),
            ],
        ),
        migrations.CreateModel(
            name='EventsNotApprovedOld',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_id', models.CharField(max_length=30)),
                ('approved', models.BooleanField(default=False)),
                ('title', models.CharField(max_length=500)),
                ('post', models.TextField(blank=True, default='')),
                ('image', models.CharField(blank=True, max_length=500, null=True)),
                ('url', models.CharField(blank=True, max_length=500)),
                ('price', models.CharField(blank=True, max_length=500)),
                ('address', models.CharField(blank=True, max_length=500)),
                ('explored_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='published date and time')),
                ('from_date', models.DateTimeField(default=datetime.datetime(2023, 3, 11, 16, 52, 1, 210992, tzinfo=utc), verbose_name='event from_date')),
                ('to_date', models.DateTimeField(blank=True, default=datetime.datetime(2023, 3, 11, 16, 52, 1, 211012, tzinfo=utc), verbose_name='event to_date')),
            ],
        ),
        migrations.CreateModel(
            name='Parameter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site', models.CharField(max_length=500)),
                ('parameter_name', models.CharField(max_length=500)),
                ('value', models.CharField(max_length=500)),
                ('commentary', models.CharField(max_length=500, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PostingTime',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_weekday', models.IntegerField(default=4)),
                ('end_weekday', models.IntegerField(default=6)),
                ('posting_time_hours', models.IntegerField(default=13)),
                ('posting_time_minutes', models.IntegerField(default=20)),
            ],
        ),
    ]
