# -*- coding: utf-8 -*-
from openai import OpenAI


class OpenAIHelper:
    def __init__(self):
        self.client = OpenAI()
        self.answer = None

    def refactor_post(self, event):
        completion = self.client.chat.completions.create(
            model="gpt-3.5-turbo",
            messages=[
                {"role": "system",
                 "content": "–¢—ã —Ä–µ–¥–∞–∫—Ç–æ—Ä-–∫–æ–ø–∏—Ä–∞–π—Ç–µ—Ä –¥–ª—è —Ç–µ–ª–µ–≥—Ä–∞–º –∫–∞–Ω–∞–ª–∞ –æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è—Ö –≤ –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥–µ. –£ –Ω–∞—Å –µ—Å—Ç—å —Å—ã—Ä–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—é –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞—Ç—å –µ—ë –¥–ª—è –ø–æ—Å—Ç–∞."},
                {"role": "user",
                 "content": f"""–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–æ—á–∏—Ç–∞—Ç—å —Ç–µ–∫—Å—Ç, –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –¥—Ä—É–≥—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∏—Ö –ø–æ —Å–ª–µ–¥—É—é—â–∏–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º:
                 –ó–∞–≥–æ–ª–æ–≤–æ–∫ –Ω–µ –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –∫–∞–∫–∏–µ-—Ç–æ –¥–∞—Ç—ã –∏ —É–ø–æ–º–∏–Ω–∞–Ω–∏—è –º–µ—Å—Ç–∞ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è. –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –∏–∑ —Ç–µ–∫—Å—Ç–∞ –ø–æ–Ω—è—Ç—å –∫–∞–∫–æ–π —Ç–∏–ø –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è (–ª–µ–∫—Ü–∏—è, –∫–∏–Ω–æ–ø–æ–∫–∞–∑, –∫–æ–Ω—Ü–µ—Ä—Ç, —Ñ–µ—Å—Ç–∏–≤–∞–ª—å –∏ –¥—Ä—É–≥–∏–µ) (–Ω–∞ –∫–∏—Ä–∏–ª–∏—Ü–µ), –Ω–∞–∑–≤–∞–Ω–∏—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –Ω–∞ –∫–∏—Ä–∏–ª–∏—Ü–µ –Ω—É–∂–Ω–æ –ø–æ—Å—Ç–∞–≤–∏—Ç—å –≤ –∫–∞–≤—ã—á–∫–∏, –Ω–∞ –ª–∞—Ç–∏–Ω–∏—Ü–µ –∫–∞–≤—ã—á–∫–∏ –Ω–µ –Ω—É–∂–Ω—ã. –î–æ–±–∞–≤–∏—Ç—å —ç–º–æ–¥–∑–∏ –≤ –Ω–∞—á–∞–ª–µ –ø–æ —Å–º—ã—Å–ª—É. –í –∫–æ–Ω–µ—á–Ω–æ–º –∏—Ç–æ–≥–µ —Å–æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞–≥–æ–ª–æ–≤–∫ –ø–æ —à–∞–±–ª–æ–Ω—É "<–≠–ú–û–î–ó–ò> <–¢–∏–ø –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è> <–ù–∞–∑–≤–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è>". –ü—Ä–∏–º–µ—Ä (üöÄ –õ–µ–∫—Ü–∏—è ¬´–ü–æ–∫–æ—Ä–µ–Ω–∏–µ –∫–æ—Å–º–æ—Å–∞ –≤ –°–°–°–†¬ª).
                 –¢–µ–∫—Å—Ç –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –Ω–µ –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –∫–∞–∫–∏–µ-—Ç–æ —Ç–æ—á–Ω—ã–µ –¥–∞—Ç—ã, –ø–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –∏—Ö –≤ —É–∫–∞–∑–∞–Ω–∏—è –¥–Ω–µ–π –Ω–µ–¥–µ–ª—å. –¢–∞–∫–∂–µ –£–±—Ä–∞—Ç—å –≤—Å–µ —Å—Å—ã–ª–∫–∏, —Å–ø–µ—Ü-—Å–∏–º–≤–æ–ª—ã –∏ –¥—Ä—É–≥–∏–µ –º–µ—à–∞—é—â–∏–µ –≤–µ—â–∏ –∏–∑ —Ç–µ–∫—Å—Ç–∞. –ò–∑ –≤—Å–µ–≥–æ —Ç–µ–∫—Å—Ç–∞ –≤—ã–¥–µ–ª–∏—Ç—å –æ—Å–Ω–æ–≤–Ω—É—é –º—ã—Å–ª—å –∏ –≤—ã–ª–æ–∂–∏—Ç—å –µ—ë –≤ –æ–¥–Ω–æ–º –∞–±–∑–∞—Ü–µ (1-3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è). –°—Ç–∏–ª—å –Ω–∞–ø–∏—Å–∞–Ω–∏—è –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —É–ø—Ä–æ—â—ë–Ω–Ω—ã–º –∏ –ø–æ–Ω—è—Ç–Ω—ã–º, –∞ —Ç–∞–∫–∂–µ –Ω–µ –±—ã—Ç—å –æ—Ç –ø–µ—Ä–≤–æ–≥–æ –ª–∏—Ü–∞. –í—Å–µ –º–µ—Å—Ç–æ–∏–º–µ–Ω–∏—è –ø–µ—Ä–µ—Ñ—Ä–∞–∑–∏—Ä–æ–≤–∞—Ç—å –≤ —Ç—Ä–µ—Ç—å–µ –ª–∏—Ü–æ ("–æ–Ω–∏ —á—Ç–æ-—Ç–æ —Å–¥–µ–ª–∞–ª–∏")
                 –í—ã–¥–µ–ª–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è. –í—ã–¥–µ–ª–∏—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–∞–∂–Ω—ã—Ö —Ç–µ–≥–æ–≤ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è. –†–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã–¥–∞—Ç—å –≤ –≤–∏–¥–µ –Ω–∞–∑–≤–∞–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ (–∑–∞–≥–æ–ª–æ–≤–∫, —Ç–µ–∫—Å—Ç) –¥–≤–æ–µ—Ç–æ—á–∏–µ –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç.
                 –ú–ï–†–û–ü–†–ò–Ø–¢–ò–ï:
                 –ó–∞–≥–æ–ª–æ–≤–æ–∫: {event['title']}
                 –¢–µ–∫—Å—Ç: {event['full_text']}
                 """}
            ]
        )

        self.answer = completion.choices[0].message.content

        return self.answer

    def parse_gpt_answer(self):
        if self.answer is None:
            return {}
        data = self.answer.split('\n')
        event_data = {}
        for d in data:
            if d.strip() == '':
                continue
            divided = d.split(':')
            event_data[divided[0].strip()] = divided[-1].strip()
        return event_data

    def new_event_data(self, event):
        replace_phrases = {'–¢–µ–∫—Å—Ç': 'full_text', '–ó–∞–≥–æ–ª–æ–≤–æ–∫': 'title', '–ö–∞—Ç–µ–≥–æ—Ä–∏—è': 'category'}
        if self.answer is None:
            self.refactor_post(event)
        ai_event_data = self.parse_gpt_answer()

        ai_event = {}
        for key, new_event_data in ai_event_data.items():
            if key not in replace_phrases.keys(): continue
            ai_event[replace_phrases[key]] = new_event_data
        return ai_event

